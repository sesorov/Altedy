"""
Scan files for malware
"""

import time
import requests

from configs.bot_conf import BotConfig
from configs.logger_conf import configure_logger

MAX_TRIES = 10
LOGGER = configure_logger(__name__)

# pylint: disable = logging-fstring-interpolation


def scan_file(file_path):
    """
    Scan file for malware
    Returns true of file is OK and false if not

    :param file_path: path to file to be scanned
    :return:
    """
    av_params = BotConfig().properties["ANTIVIRUS"]
    av_api_url = av_params["API_URL"]
    av_api_key = av_params["API_KEY"]

    scan_id = None
    with open(file_path, 'rb') as to_scan:
        file_params = dict(file=('scan.py', to_scan))
        av_response = requests.post(f"{av_api_url}/scan", files=file_params, params=dict(apikey=av_api_key))
    if av_response.status_code == 200:
        av_result = av_response.json()
        scan_id = av_result["scan_id"]
        LOGGER.info(f"Successfully uploaded file for scan. ID: {scan_id}")

    report_data = None
    for _i in range(MAX_TRIES):
        av_response = requests.get(f"{av_api_url}/report", params=dict(apikey=av_api_key, resource=scan_id))
        LOGGER.info(f"Report status code: {av_response.status_code}")
        if av_response.status_code == 200:
            av_result = av_response.json()
            LOGGER.info(f"Report response code: {av_result['response_code']}")
            if av_result["response_code"] == 1:
                report_data = av_result
                break
            time.sleep(10)
        else:
            time.sleep(3)
    return report_data["positives"] == 0
